{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Input, Output, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport '@cds/core/toggle/register.js';\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nclass CdsToggleDirective {\n  constructor(elementRef) {\n    this.layoutChange = new EventEmitter();\n    this.element = elementRef.nativeElement;\n  }\n\n  get cdsMotion() {\n    return this.element.cdsMotion;\n  }\n\n  set cdsMotion(value) {\n    this.element.cdsMotion = value;\n  }\n\n  get controlAlign() {\n    return this.element.controlAlign;\n  }\n\n  set controlAlign(value) {\n    this.element.controlAlign = value;\n  }\n\n  get status() {\n    return this.element.status;\n  }\n\n  set status(value) {\n    this.element.status = value;\n  }\n\n  get controlWidth() {\n    return this.element.controlWidth;\n  }\n\n  set controlWidth(value) {\n    this.element.controlWidth = value;\n  }\n\n  get validate() {\n    return this.element.validate;\n  }\n\n  set validate(value) {\n    this.element.validate = value === '' ? true : value;\n  }\n\n  get responsive() {\n    return this.element.responsive;\n  }\n\n  set responsive(value) {\n    this.element.responsive = value === '' ? true : value;\n  }\n\n  get layout() {\n    return this.element.layout;\n  }\n\n  set layout(value) {\n    this.element.layout = value;\n  }\n\n}\n\nCdsToggleDirective.ɵfac = function CdsToggleDirective_Factory(t) {\n  return new (t || CdsToggleDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nCdsToggleDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: CdsToggleDirective,\n  selectors: [[\"cds-toggle\"]],\n  inputs: {\n    cdsMotion: \"cdsMotion\",\n    controlAlign: \"controlAlign\",\n    status: \"status\",\n    controlWidth: \"controlWidth\",\n    validate: \"validate\",\n    responsive: \"responsive\",\n    layout: \"layout\"\n  },\n  outputs: {\n    layoutChange: \"layoutChange\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdsToggleDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'cds-toggle'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    cdsMotion: [{\n      type: Input\n    }],\n    controlAlign: [{\n      type: Input\n    }],\n    status: [{\n      type: Input\n    }],\n    controlWidth: [{\n      type: Input\n    }],\n    validate: [{\n      type: Input\n    }],\n    responsive: [{\n      type: Input\n    }],\n    layout: [{\n      type: Input\n    }],\n    layoutChange: [{\n      type: Output\n    }]\n  });\n})();\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nclass CdsToggleGroupDirective {\n  constructor(elementRef) {\n    this.element = elementRef.nativeElement;\n  }\n\n  get status() {\n    return this.element.status;\n  }\n\n  set status(value) {\n    this.element.status = value;\n  }\n\n  get layout() {\n    return this.element.layout;\n  }\n\n  set layout(value) {\n    this.element.layout = value;\n  }\n\n  get controlAlign() {\n    return this.element.controlAlign;\n  }\n\n  set controlAlign(value) {\n    this.element.controlAlign = value;\n  }\n\n  get disabled() {\n    return this.element.disabled;\n  }\n\n  set disabled(value) {\n    this.element.disabled = value === '' ? true : value;\n  }\n\n  get controlWidth() {\n    return this.element.controlWidth;\n  }\n\n  set controlWidth(value) {\n    this.element.controlWidth = value;\n  }\n\n  get responsive() {\n    return this.element.responsive;\n  }\n\n  set responsive(value) {\n    this.element.responsive = value === '' ? true : value;\n  }\n\n}\n\nCdsToggleGroupDirective.ɵfac = function CdsToggleGroupDirective_Factory(t) {\n  return new (t || CdsToggleGroupDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nCdsToggleGroupDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: CdsToggleGroupDirective,\n  selectors: [[\"cds-toggle-group\"]],\n  inputs: {\n    status: \"status\",\n    layout: \"layout\",\n    controlAlign: \"controlAlign\",\n    disabled: \"disabled\",\n    controlWidth: \"controlWidth\",\n    responsive: \"responsive\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdsToggleGroupDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'cds-toggle-group'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    status: [{\n      type: Input\n    }],\n    layout: [{\n      type: Input\n    }],\n    controlAlign: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    controlWidth: [{\n      type: Input\n    }],\n    responsive: [{\n      type: Input\n    }]\n  });\n})();\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nclass CdsToggleModule {}\n\nCdsToggleModule.ɵfac = function CdsToggleModule_Factory(t) {\n  return new (t || CdsToggleModule)();\n};\n\nCdsToggleModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: CdsToggleModule\n});\nCdsToggleModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdsToggleModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [CdsToggleDirective, CdsToggleGroupDirective],\n      exports: [CdsToggleDirective, CdsToggleGroupDirective]\n    }]\n  }], null, null);\n})();\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CdsToggleDirective, CdsToggleGroupDirective, CdsToggleModule };","map":{"version":3,"sources":["C:/Angular/toko/node_modules/@cds/angular/fesm2015/toggle.mjs"],"names":["i0","EventEmitter","Directive","Input","Output","NgModule","CommonModule","CdsToggleDirective","constructor","elementRef","layoutChange","element","nativeElement","cdsMotion","value","controlAlign","status","controlWidth","validate","responsive","layout","ɵfac","ElementRef","ɵdir","type","args","selector","CdsToggleGroupDirective","disabled","CdsToggleModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Input, Output, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport '@cds/core/toggle/register.js';\n\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsToggleDirective {\n    constructor(elementRef) {\n        this.layoutChange = new EventEmitter();\n        this.element = elementRef.nativeElement;\n    }\n    get cdsMotion() {\n        return this.element.cdsMotion;\n    }\n    set cdsMotion(value) {\n        this.element.cdsMotion = value;\n    }\n    ;\n    get controlAlign() {\n        return this.element.controlAlign;\n    }\n    set controlAlign(value) {\n        this.element.controlAlign = value;\n    }\n    ;\n    get status() {\n        return this.element.status;\n    }\n    set status(value) {\n        this.element.status = value;\n    }\n    ;\n    get controlWidth() {\n        return this.element.controlWidth;\n    }\n    set controlWidth(value) {\n        this.element.controlWidth = value;\n    }\n    ;\n    get validate() {\n        return this.element.validate;\n    }\n    set validate(value) {\n        this.element.validate = value === '' ? true : value;\n    }\n    ;\n    get responsive() {\n        return this.element.responsive;\n    }\n    set responsive(value) {\n        this.element.responsive = value === '' ? true : value;\n    }\n    ;\n    get layout() {\n        return this.element.layout;\n    }\n    set layout(value) {\n        this.element.layout = value;\n    }\n    ;\n}\nCdsToggleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsToggleDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdsToggleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: CdsToggleDirective, selector: \"cds-toggle\", inputs: { cdsMotion: \"cdsMotion\", controlAlign: \"controlAlign\", status: \"status\", controlWidth: \"controlWidth\", validate: \"validate\", responsive: \"responsive\", layout: \"layout\" }, outputs: { layoutChange: \"layoutChange\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsToggleDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'cds-toggle' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { cdsMotion: [{\n                type: Input\n            }], controlAlign: [{\n                type: Input\n            }], status: [{\n                type: Input\n            }], controlWidth: [{\n                type: Input\n            }], validate: [{\n                type: Input\n            }], responsive: [{\n                type: Input\n            }], layout: [{\n                type: Input\n            }], layoutChange: [{\n                type: Output\n            }] } });\n\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsToggleGroupDirective {\n    constructor(elementRef) {\n        this.element = elementRef.nativeElement;\n    }\n    get status() {\n        return this.element.status;\n    }\n    set status(value) {\n        this.element.status = value;\n    }\n    ;\n    get layout() {\n        return this.element.layout;\n    }\n    set layout(value) {\n        this.element.layout = value;\n    }\n    ;\n    get controlAlign() {\n        return this.element.controlAlign;\n    }\n    set controlAlign(value) {\n        this.element.controlAlign = value;\n    }\n    ;\n    get disabled() {\n        return this.element.disabled;\n    }\n    set disabled(value) {\n        this.element.disabled = value === '' ? true : value;\n    }\n    ;\n    get controlWidth() {\n        return this.element.controlWidth;\n    }\n    set controlWidth(value) {\n        this.element.controlWidth = value;\n    }\n    ;\n    get responsive() {\n        return this.element.responsive;\n    }\n    set responsive(value) {\n        this.element.responsive = value === '' ? true : value;\n    }\n    ;\n}\nCdsToggleGroupDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsToggleGroupDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdsToggleGroupDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: CdsToggleGroupDirective, selector: \"cds-toggle-group\", inputs: { status: \"status\", layout: \"layout\", controlAlign: \"controlAlign\", disabled: \"disabled\", controlWidth: \"controlWidth\", responsive: \"responsive\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsToggleGroupDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'cds-toggle-group' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { status: [{\n                type: Input\n            }], layout: [{\n                type: Input\n            }], controlAlign: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], controlWidth: [{\n                type: Input\n            }], responsive: [{\n                type: Input\n            }] } });\n\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsToggleModule {\n}\nCdsToggleModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsToggleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCdsToggleModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsToggleModule, declarations: [CdsToggleDirective,\n        CdsToggleGroupDirective], imports: [CommonModule], exports: [CdsToggleDirective,\n        CdsToggleGroupDirective] });\nCdsToggleModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsToggleModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsToggleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [\n                        CdsToggleDirective,\n                        CdsToggleGroupDirective,\n                    ],\n                    exports: [\n                        CdsToggleDirective,\n                        CdsToggleGroupDirective,\n                    ],\n                }]\n        }] });\n\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdsToggleDirective, CdsToggleGroupDirective, CdsToggleModule };\n"]},"metadata":{},"sourceType":"module"}