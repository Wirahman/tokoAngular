{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Angular\\\\toko\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { onChildListMutation as t, listenForAttributeListChange as s, isNumericString as i, notProductionEnvironment as e, LogService as h } from \"@cds/core/internal\";\n\nclass o {\n  constructor(t) {\n    this.host = t, this.observers = [], this.host.addController(this);\n  }\n\n  get columns() {\n    return Array.from(this._columns ?? []);\n  }\n\n  get visibleColumns() {\n    return this.columns.filter(t => !t.hidden);\n  }\n\n  get lastVisibleColumn() {\n    return this.visibleColumns[\"rtl\" === this.host.getAttribute(\"dir\") ? 0 : this.visibleColumns.length - 1];\n  }\n\n  hostConnected() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.host.updateComplete, _this.updateLayout(), _this.host.addEventListener(\"resizeChange\", () => _this.initializeColumnWidths(), {\n        once: !0,\n        capture: !0\n      }), _this.observers.push(t(_this.host, /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (t) {\n          yield _this.host.updateComplete, t && _this.columnAddedOrRemoved(t) && _this.updateLayout();\n        });\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }())), _this.observers.push(s(_this.host, [\"hidden\"], () => _this.updateLayout()));\n    })();\n  }\n\n  hostUpdated() {\n    this.host.height && this.host.style.setProperty(\"--body-height\", i(this.host.height) ? this.host.height + \"px\" : this.host.height);\n  }\n\n  hostDisconnected() {\n    this.observers.forEach(t => t?.disconnect());\n  }\n\n  columnAddedOrRemoved(t) {\n    return [...Array.from(t.removedNodes), ...Array.from(t.addedNodes)].find(t => \"CDS-GRID-COLUMN\" === t.tagName);\n  }\n\n  initializeColumnWidths() {\n    \"fixed\" === this.host.columnLayout && (this.visibleColumns.filter(t => t.width).forEach(t => this.host.style.setProperty(\"--ch\" + t.ariaColIndex, i(t.width) ? t.width + \"px\" : t.width)), this.visibleColumns.filter(t => !t.width && parseInt(t.ariaColIndex) !== this.columns.length).forEach(t => this.host.style.setProperty(\"--ch\" + t.ariaColIndex, parseInt(getComputedStyle(t).width) + \"px\")), this.host.style.setProperty(\"--ch\" + this.lastVisibleColumn.ariaColIndex, `minmax(${this.getLastColumnWidth() ?? parseInt(getComputedStyle(this.lastVisibleColumn).width) + \"px\"}, 100%)`));\n  }\n\n  getLastColumnWidth() {\n    return i(this.lastVisibleColumn.width) ? this.lastVisibleColumn.width + \"px\" : this.lastVisibleColumn.width ? this.lastVisibleColumn.width : null;\n  }\n\n  updateLayout() {\n    this._columns = this.host.columns, this.validateColumnLayout(), this.createColumnGrids(), this.setColumnDividers();\n  }\n\n  createColumnGrids() {\n    const t = this.columns.filter(t => !t.hidden).reduce((t, s) => {\n      const e = i(s.width) ? s.width + \"px\" : s.width;\n      return `${t} var(--ch${s.ariaColIndex}, ${e || \"1fr\"})`;\n    }, \"\");\n    this.host.style.setProperty(\"--ch-grid\", t);\n  }\n\n  setColumnDividers() {\n    this.visibleColumns.forEach((t, s) => {\n      t.removeAttribute(\"draggable-hidden\"), \"action\" === t.type && \"action\" === this.visibleColumns[s + 1]?.type && t.setAttribute(\"draggable-hidden\", \"\");\n    }), this.lastVisibleColumn?.setAttribute(\"draggable-hidden\", \"\");\n  }\n\n  validateColumnLayout() {\n    if (e()) {\n      const t = Array.from(this.host.rows[0]?.cells ?? []).filter(t => !t.hidden);\n      this.visibleColumns.length !== t?.length && 0 !== t?.length && h.error(`Error: column mismatch, ${this.visibleColumns.length} visible column headers with ${t.length} visible cells`);\n    }\n  }\n\n}\n\nexport { o as GridLayoutController };","map":{"version":3,"sources":["C:/Angular/toko/node_modules/@cds/core/grid/grid/grid-layout.controller.js"],"names":["onChildListMutation","t","listenForAttributeListChange","s","isNumericString","i","notProductionEnvironment","e","LogService","h","o","constructor","host","observers","addController","columns","Array","from","_columns","visibleColumns","filter","hidden","lastVisibleColumn","getAttribute","length","hostConnected","updateComplete","updateLayout","addEventListener","initializeColumnWidths","once","capture","push","columnAddedOrRemoved","hostUpdated","height","style","setProperty","hostDisconnected","forEach","disconnect","removedNodes","addedNodes","find","tagName","columnLayout","width","ariaColIndex","parseInt","getComputedStyle","getLastColumnWidth","validateColumnLayout","createColumnGrids","setColumnDividers","reduce","removeAttribute","type","setAttribute","rows","cells","error","GridLayoutController"],"mappings":"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","sourcesContent":["import{onChildListMutation as t,listenForAttributeListChange as s,isNumericString as i,notProductionEnvironment as e,LogService as h}from\"@cds/core/internal\";class o{constructor(t){this.host=t,this.observers=[],this.host.addController(this)}get columns(){return Array.from(this._columns??[])}get visibleColumns(){return this.columns.filter((t=>!t.hidden))}get lastVisibleColumn(){return this.visibleColumns[\"rtl\"===this.host.getAttribute(\"dir\")?0:this.visibleColumns.length-1]}async hostConnected(){await this.host.updateComplete,this.updateLayout(),this.host.addEventListener(\"resizeChange\",(()=>this.initializeColumnWidths()),{once:!0,capture:!0}),this.observers.push(t(this.host,(async t=>{await this.host.updateComplete,t&&this.columnAddedOrRemoved(t)&&this.updateLayout()}))),this.observers.push(s(this.host,[\"hidden\"],(()=>this.updateLayout())))}hostUpdated(){this.host.height&&this.host.style.setProperty(\"--body-height\",i(this.host.height)?this.host.height+\"px\":this.host.height)}hostDisconnected(){this.observers.forEach((t=>t?.disconnect()))}columnAddedOrRemoved(t){return[...Array.from(t.removedNodes),...Array.from(t.addedNodes)].find((t=>\"CDS-GRID-COLUMN\"===t.tagName))}initializeColumnWidths(){\"fixed\"===this.host.columnLayout&&(this.visibleColumns.filter((t=>t.width)).forEach((t=>this.host.style.setProperty(\"--ch\"+t.ariaColIndex,i(t.width)?t.width+\"px\":t.width))),this.visibleColumns.filter((t=>!t.width&&parseInt(t.ariaColIndex)!==this.columns.length)).forEach((t=>this.host.style.setProperty(\"--ch\"+t.ariaColIndex,parseInt(getComputedStyle(t).width)+\"px\"))),this.host.style.setProperty(\"--ch\"+this.lastVisibleColumn.ariaColIndex,`minmax(${this.getLastColumnWidth()??parseInt(getComputedStyle(this.lastVisibleColumn).width)+\"px\"}, 100%)`))}getLastColumnWidth(){return i(this.lastVisibleColumn.width)?this.lastVisibleColumn.width+\"px\":this.lastVisibleColumn.width?this.lastVisibleColumn.width:null}updateLayout(){this._columns=this.host.columns,this.validateColumnLayout(),this.createColumnGrids(),this.setColumnDividers()}createColumnGrids(){const t=this.columns.filter((t=>!t.hidden)).reduce(((t,s)=>{const e=i(s.width)?s.width+\"px\":s.width;return`${t} var(--ch${s.ariaColIndex}, ${e||\"1fr\"})`}),\"\");this.host.style.setProperty(\"--ch-grid\",t)}setColumnDividers(){this.visibleColumns.forEach(((t,s)=>{t.removeAttribute(\"draggable-hidden\"),\"action\"===t.type&&\"action\"===this.visibleColumns[s+1]?.type&&t.setAttribute(\"draggable-hidden\",\"\")})),this.lastVisibleColumn?.setAttribute(\"draggable-hidden\",\"\")}validateColumnLayout(){if(e()){const t=Array.from(this.host.rows[0]?.cells??[]).filter((t=>!t.hidden));this.visibleColumns.length!==t?.length&&0!==t?.length&&h.error(`Error: column mismatch, ${this.visibleColumns.length} visible column headers with ${t.length} visible cells`)}}}export{o as GridLayoutController};\n"]},"metadata":{},"sourceType":"module"}