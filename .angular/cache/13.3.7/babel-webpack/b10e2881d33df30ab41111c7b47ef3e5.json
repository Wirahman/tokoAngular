{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Angular\\\\toko\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { listenForAttributeListChange as t, onFirstInteraction as s, isNumericString as h } from \"@cds/core/internal\";\n\nclass e {\n  constructor(t) {\n    this.host = t, this.observers = [], this.host.addController(this);\n  }\n\n  get hostGrid() {\n    return this.host.parentElement;\n  }\n\n  get hostRange() {\n    return this.host.shadowRoot?.querySelector(\"cds-internal-split-handle input\");\n  }\n\n  hostConnected() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.setActionWidth(), _this.hostGrid.shadowRoot?.addEventListener(\"slotchange\", () => _this.setActionWidth()), _this.observers.push(t(_this.host, [\"type\"], () => _this.setActionWidth())), yield _this.host.updateComplete, yield s(_this.hostGrid), _this.hostRange && (_this.hostRange.max = \"\" + parseInt(getComputedStyle(_this.hostGrid).width), _this.hostRange.value = \"\" + parseInt(getComputedStyle(_this.host).width), _this.hostRange.addEventListener(\"input\", t => _this.updateResizedColumnWidth(t.target.valueAsNumber)), _this.hostRange.addEventListener(\"change\", t => _this.updateResizedColumnWidth(t.target.valueAsNumber)));\n    })();\n  }\n\n  hostUpdated() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this2.host.updateComplete, _this2.updateSetColumnWidth();\n    })();\n  }\n\n  hostDisconnected() {\n    this.observers.forEach(t => t?.disconnect());\n  }\n\n  setActionWidth() {\n    if (\"action\" === this.host.type || \"action\" === this.host.getAttribute(\"type\")) {\n      this.host.width = \"36px\";\n      const t = Array.from(this.hostGrid.columns).indexOf(this.host);\n      this.hostGrid.rows.forEach(s => s.cells[t].setAttribute(\"type\", \"action\"));\n    }\n  }\n\n  updateSetColumnWidth() {\n    this.host.width && void 0 !== this.host.ariaColIndex && (this.hostGrid.style.setProperty(\"--ch\" + this.host.ariaColIndex, h(this.host.width) ? this.host.width + \"px\" : this.host.width), this.hostRange && (this.hostRange.min = \"\" + parseInt(this.host.width) ?? \"\", this.hostRange.value = this.host.width));\n  }\n\n  updateResizedColumnWidth(t) {\n    this.host.dispatchEvent(new CustomEvent(\"resizeChange\", {\n      detail: t,\n      bubbles: !0\n    }));\n    const s = Math.max(h(this.host.width) || this.host.width?.includes(\"px\") ? parseInt(this.host.width) : 36, t);\n    this.hostGrid.style.setProperty(\"--ch\" + this.host.ariaColIndex, s + \"px\");\n  }\n\n}\n\nexport { e as GridColumnSizeController };","map":{"version":3,"sources":["C:/Angular/toko/node_modules/@cds/core/grid/column/grid-column-size.controller.js"],"names":["listenForAttributeListChange","t","onFirstInteraction","s","isNumericString","h","e","constructor","host","observers","addController","hostGrid","parentElement","hostRange","shadowRoot","querySelector","hostConnected","setActionWidth","addEventListener","push","updateComplete","max","parseInt","getComputedStyle","width","value","updateResizedColumnWidth","target","valueAsNumber","hostUpdated","updateSetColumnWidth","hostDisconnected","forEach","disconnect","type","getAttribute","Array","from","columns","indexOf","rows","cells","setAttribute","ariaColIndex","style","setProperty","min","dispatchEvent","CustomEvent","detail","bubbles","Math","includes","GridColumnSizeController"],"mappings":"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","sourcesContent":["import{listenForAttributeListChange as t,onFirstInteraction as s,isNumericString as h}from\"@cds/core/internal\";class e{constructor(t){this.host=t,this.observers=[],this.host.addController(this)}get hostGrid(){return this.host.parentElement}get hostRange(){return this.host.shadowRoot?.querySelector(\"cds-internal-split-handle input\")}async hostConnected(){this.setActionWidth(),this.hostGrid.shadowRoot?.addEventListener(\"slotchange\",(()=>this.setActionWidth())),this.observers.push(t(this.host,[\"type\"],(()=>this.setActionWidth()))),await this.host.updateComplete,await s(this.hostGrid),this.hostRange&&(this.hostRange.max=\"\"+parseInt(getComputedStyle(this.hostGrid).width),this.hostRange.value=\"\"+parseInt(getComputedStyle(this.host).width),this.hostRange.addEventListener(\"input\",(t=>this.updateResizedColumnWidth(t.target.valueAsNumber))),this.hostRange.addEventListener(\"change\",(t=>this.updateResizedColumnWidth(t.target.valueAsNumber))))}async hostUpdated(){await this.host.updateComplete,this.updateSetColumnWidth()}hostDisconnected(){this.observers.forEach((t=>t?.disconnect()))}setActionWidth(){if(\"action\"===this.host.type||\"action\"===this.host.getAttribute(\"type\")){this.host.width=\"36px\";const t=Array.from(this.hostGrid.columns).indexOf(this.host);this.hostGrid.rows.forEach((s=>s.cells[t].setAttribute(\"type\",\"action\")))}}updateSetColumnWidth(){this.host.width&&void 0!==this.host.ariaColIndex&&(this.hostGrid.style.setProperty(\"--ch\"+this.host.ariaColIndex,h(this.host.width)?this.host.width+\"px\":this.host.width),this.hostRange&&(this.hostRange.min=\"\"+parseInt(this.host.width)??\"\",this.hostRange.value=this.host.width))}updateResizedColumnWidth(t){this.host.dispatchEvent(new CustomEvent(\"resizeChange\",{detail:t,bubbles:!0}));const s=Math.max(h(this.host.width)||this.host.width?.includes(\"px\")?parseInt(this.host.width):36,t);this.hostGrid.style.setProperty(\"--ch\"+this.host.ariaColIndex,s+\"px\")}}export{e as GridColumnSizeController};\n"]},"metadata":{},"sourceType":"module"}