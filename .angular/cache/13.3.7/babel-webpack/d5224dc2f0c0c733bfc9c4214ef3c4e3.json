{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Input, Output, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport '@cds/core/navigation/register.js';\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nclass CdsNavigationDirective {\n  constructor(elementRef) {\n    this.cdsMotionChange = new EventEmitter();\n    this.expandedChange = new EventEmitter();\n    this.element = elementRef.nativeElement;\n  }\n\n  get expandedRoot() {\n    return this.element.expandedRoot;\n  }\n\n  set expandedRoot(value) {\n    this.element.expandedRoot = value === '' ? true : value;\n  }\n\n  get cdsMotion() {\n    return this.element.cdsMotion;\n  }\n\n  set cdsMotion(value) {\n    this.element.cdsMotion = value;\n  }\n\n  get expanded() {\n    return this.element.expanded;\n  }\n\n  set expanded(value) {\n    this.element.expanded = value === '' ? true : value;\n  }\n\n  get i18n() {\n    return this.element.i18n;\n  }\n\n  set i18n(value) {\n    this.element.i18n = value;\n  }\n\n  get addStartEventListener() {\n    return this.element.addStartEventListener;\n  }\n\n  set addStartEventListener(value) {\n    this.element.addStartEventListener = value;\n  }\n\n  get updateChildrenProps() {\n    return this.element.updateChildrenProps;\n  }\n\n  set updateChildrenProps(value) {\n    this.element.updateChildrenProps = value;\n  }\n\n}\n\nCdsNavigationDirective.ɵfac = function CdsNavigationDirective_Factory(t) {\n  return new (t || CdsNavigationDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nCdsNavigationDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: CdsNavigationDirective,\n  selectors: [[\"cds-navigation\"]],\n  inputs: {\n    expandedRoot: \"expandedRoot\",\n    cdsMotion: \"cdsMotion\",\n    expanded: \"expanded\",\n    i18n: \"i18n\",\n    addStartEventListener: \"addStartEventListener\",\n    updateChildrenProps: \"updateChildrenProps\"\n  },\n  outputs: {\n    cdsMotionChange: \"cdsMotionChange\",\n    expandedChange: \"expandedChange\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdsNavigationDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'cds-navigation'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    expandedRoot: [{\n      type: Input\n    }],\n    cdsMotion: [{\n      type: Input\n    }],\n    expanded: [{\n      type: Input\n    }],\n    i18n: [{\n      type: Input\n    }],\n    addStartEventListener: [{\n      type: Input\n    }],\n    updateChildrenProps: [{\n      type: Input\n    }],\n    cdsMotionChange: [{\n      type: Output\n    }],\n    expandedChange: [{\n      type: Output\n    }]\n  });\n})();\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nclass CdsNavigationGroupDirective {\n  constructor(elementRef) {\n    this.cdsMotionChange = new EventEmitter();\n    this.expandedChange = new EventEmitter();\n    this.element = elementRef.nativeElement;\n  }\n\n  get cdsMotion() {\n    return this.element.cdsMotion;\n  }\n\n  set cdsMotion(value) {\n    this.element.cdsMotion = value;\n  }\n\n  get i18n() {\n    return this.element.i18n;\n  }\n\n  set i18n(value) {\n    this.element.i18n = value;\n  }\n\n  get expanded() {\n    return this.element.expanded;\n  }\n\n  set expanded(value) {\n    this.element.expanded = value === '' ? true : value;\n  }\n\n  get active() {\n    return this.element.active;\n  }\n\n  set active(value) {\n    this.element.active = value === '' ? true : value;\n  }\n\n  get hasFocus() {\n    return this.element.hasFocus;\n  }\n\n  set hasFocus(value) {\n    this.element.hasFocus = value === '' ? true : value;\n  }\n\n}\n\nCdsNavigationGroupDirective.ɵfac = function CdsNavigationGroupDirective_Factory(t) {\n  return new (t || CdsNavigationGroupDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nCdsNavigationGroupDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: CdsNavigationGroupDirective,\n  selectors: [[\"cds-navigation-group\"]],\n  inputs: {\n    cdsMotion: \"cdsMotion\",\n    i18n: \"i18n\",\n    expanded: \"expanded\",\n    active: \"active\",\n    hasFocus: \"hasFocus\"\n  },\n  outputs: {\n    cdsMotionChange: \"cdsMotionChange\",\n    expandedChange: \"expandedChange\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdsNavigationGroupDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'cds-navigation-group'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    cdsMotion: [{\n      type: Input\n    }],\n    i18n: [{\n      type: Input\n    }],\n    expanded: [{\n      type: Input\n    }],\n    active: [{\n      type: Input\n    }],\n    hasFocus: [{\n      type: Input\n    }],\n    cdsMotionChange: [{\n      type: Output\n    }],\n    expandedChange: [{\n      type: Output\n    }]\n  });\n})();\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nclass CdsNavigationStartDirective {\n  constructor(elementRef) {\n    this.element = elementRef.nativeElement;\n  }\n\n  get i18n() {\n    return this.element.i18n;\n  }\n\n  set i18n(value) {\n    this.element.i18n = value;\n  }\n\n  get expandedRoot() {\n    return this.element.expandedRoot;\n  }\n\n  set expandedRoot(value) {\n    this.element.expandedRoot = value === '' ? true : value;\n  }\n\n  get hasFocus() {\n    return this.element.hasFocus;\n  }\n\n  set hasFocus(value) {\n    this.element.hasFocus = value;\n  }\n\n  get isGroupStart() {\n    return this.element.isGroupStart;\n  }\n\n  set isGroupStart(value) {\n    this.element.isGroupStart = value === '' ? true : value;\n  }\n\n  get navigationGroupId() {\n    return this.element.navigationGroupId;\n  }\n\n  set navigationGroupId(value) {\n    this.element.navigationGroupId = value;\n  }\n\n  get itemText() {\n    return this.element.itemText;\n  }\n\n  set itemText(value) {\n    this.element.itemText = value;\n  }\n\n}\n\nCdsNavigationStartDirective.ɵfac = function CdsNavigationStartDirective_Factory(t) {\n  return new (t || CdsNavigationStartDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nCdsNavigationStartDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: CdsNavigationStartDirective,\n  selectors: [[\"cds-navigation-start\"]],\n  inputs: {\n    i18n: \"i18n\",\n    expandedRoot: \"expandedRoot\",\n    hasFocus: \"hasFocus\",\n    isGroupStart: \"isGroupStart\",\n    navigationGroupId: \"navigationGroupId\",\n    itemText: \"itemText\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdsNavigationStartDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'cds-navigation-start'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    i18n: [{\n      type: Input\n    }],\n    expandedRoot: [{\n      type: Input\n    }],\n    hasFocus: [{\n      type: Input\n    }],\n    isGroupStart: [{\n      type: Input\n    }],\n    navigationGroupId: [{\n      type: Input\n    }],\n    itemText: [{\n      type: Input\n    }]\n  });\n})();\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nclass CdsNavigationItemDirective {\n  constructor(elementRef) {\n    this.element = elementRef.nativeElement;\n  }\n\n  get i18n() {\n    return this.element.i18n;\n  }\n\n  set i18n(value) {\n    this.element.i18n = value;\n  }\n\n  get active() {\n    return this.element.active;\n  }\n\n  set active(value) {\n    this.element.active = value === '' ? true : value;\n  }\n\n  get disabled() {\n    return this.element.disabled;\n  }\n\n  set disabled(value) {\n    this.element.disabled = value === '' ? true : value;\n  }\n\n  get expanded() {\n    return this.element.expanded;\n  }\n\n  set expanded(value) {\n    this.element.expanded = value === '' ? true : value;\n  }\n\n  get groupItem() {\n    return this.element.groupItem;\n  }\n\n  set groupItem(value) {\n    this.element.groupItem = value === '' ? true : value;\n  }\n\n  get hasFocus() {\n    return this.element.hasFocus;\n  }\n\n  set hasFocus(value) {\n    this.element.hasFocus = value;\n  }\n\n  get focusElement() {\n    return this.element.focusElement;\n  }\n\n  set focusElement(value) {\n    this.element.focusElement = value;\n  }\n\n  get itemText() {\n    return this.element.itemText;\n  }\n\n  set itemText(value) {\n    this.element.itemText = value;\n  }\n\n}\n\nCdsNavigationItemDirective.ɵfac = function CdsNavigationItemDirective_Factory(t) {\n  return new (t || CdsNavigationItemDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nCdsNavigationItemDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: CdsNavigationItemDirective,\n  selectors: [[\"cds-navigation-item\"]],\n  inputs: {\n    i18n: \"i18n\",\n    active: \"active\",\n    disabled: \"disabled\",\n    expanded: \"expanded\",\n    groupItem: \"groupItem\",\n    hasFocus: \"hasFocus\",\n    focusElement: \"focusElement\",\n    itemText: \"itemText\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdsNavigationItemDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'cds-navigation-item'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    i18n: [{\n      type: Input\n    }],\n    active: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    expanded: [{\n      type: Input\n    }],\n    groupItem: [{\n      type: Input\n    }],\n    hasFocus: [{\n      type: Input\n    }],\n    focusElement: [{\n      type: Input\n    }],\n    itemText: [{\n      type: Input\n    }]\n  });\n})();\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nclass CdsNavigationModule {}\n\nCdsNavigationModule.ɵfac = function CdsNavigationModule_Factory(t) {\n  return new (t || CdsNavigationModule)();\n};\n\nCdsNavigationModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: CdsNavigationModule\n});\nCdsNavigationModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdsNavigationModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [CdsNavigationDirective, CdsNavigationGroupDirective, CdsNavigationStartDirective, CdsNavigationItemDirective],\n      exports: [CdsNavigationDirective, CdsNavigationGroupDirective, CdsNavigationStartDirective, CdsNavigationItemDirective]\n    }]\n  }], null, null);\n})();\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CdsNavigationDirective, CdsNavigationGroupDirective, CdsNavigationItemDirective, CdsNavigationModule, CdsNavigationStartDirective };","map":{"version":3,"sources":["C:/Angular/toko/node_modules/@cds/angular/fesm2015/navigation.mjs"],"names":["i0","EventEmitter","Directive","Input","Output","NgModule","CommonModule","CdsNavigationDirective","constructor","elementRef","cdsMotionChange","expandedChange","element","nativeElement","expandedRoot","value","cdsMotion","expanded","i18n","addStartEventListener","updateChildrenProps","ɵfac","ElementRef","ɵdir","type","args","selector","CdsNavigationGroupDirective","active","hasFocus","CdsNavigationStartDirective","isGroupStart","navigationGroupId","itemText","CdsNavigationItemDirective","disabled","groupItem","focusElement","CdsNavigationModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Input, Output, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport '@cds/core/navigation/register.js';\n\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsNavigationDirective {\n    constructor(elementRef) {\n        this.cdsMotionChange = new EventEmitter();\n        this.expandedChange = new EventEmitter();\n        this.element = elementRef.nativeElement;\n    }\n    get expandedRoot() {\n        return this.element.expandedRoot;\n    }\n    set expandedRoot(value) {\n        this.element.expandedRoot = value === '' ? true : value;\n    }\n    ;\n    get cdsMotion() {\n        return this.element.cdsMotion;\n    }\n    set cdsMotion(value) {\n        this.element.cdsMotion = value;\n    }\n    ;\n    get expanded() {\n        return this.element.expanded;\n    }\n    set expanded(value) {\n        this.element.expanded = value === '' ? true : value;\n    }\n    ;\n    get i18n() {\n        return this.element.i18n;\n    }\n    set i18n(value) {\n        this.element.i18n = value;\n    }\n    ;\n    get addStartEventListener() {\n        return this.element.addStartEventListener;\n    }\n    set addStartEventListener(value) {\n        this.element.addStartEventListener = value;\n    }\n    ;\n    get updateChildrenProps() {\n        return this.element.updateChildrenProps;\n    }\n    set updateChildrenProps(value) {\n        this.element.updateChildrenProps = value;\n    }\n    ;\n}\nCdsNavigationDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsNavigationDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdsNavigationDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: CdsNavigationDirective, selector: \"cds-navigation\", inputs: { expandedRoot: \"expandedRoot\", cdsMotion: \"cdsMotion\", expanded: \"expanded\", i18n: \"i18n\", addStartEventListener: \"addStartEventListener\", updateChildrenProps: \"updateChildrenProps\" }, outputs: { cdsMotionChange: \"cdsMotionChange\", expandedChange: \"expandedChange\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsNavigationDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'cds-navigation' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { expandedRoot: [{\n                type: Input\n            }], cdsMotion: [{\n                type: Input\n            }], expanded: [{\n                type: Input\n            }], i18n: [{\n                type: Input\n            }], addStartEventListener: [{\n                type: Input\n            }], updateChildrenProps: [{\n                type: Input\n            }], cdsMotionChange: [{\n                type: Output\n            }], expandedChange: [{\n                type: Output\n            }] } });\n\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsNavigationGroupDirective {\n    constructor(elementRef) {\n        this.cdsMotionChange = new EventEmitter();\n        this.expandedChange = new EventEmitter();\n        this.element = elementRef.nativeElement;\n    }\n    get cdsMotion() {\n        return this.element.cdsMotion;\n    }\n    set cdsMotion(value) {\n        this.element.cdsMotion = value;\n    }\n    ;\n    get i18n() {\n        return this.element.i18n;\n    }\n    set i18n(value) {\n        this.element.i18n = value;\n    }\n    ;\n    get expanded() {\n        return this.element.expanded;\n    }\n    set expanded(value) {\n        this.element.expanded = value === '' ? true : value;\n    }\n    ;\n    get active() {\n        return this.element.active;\n    }\n    set active(value) {\n        this.element.active = value === '' ? true : value;\n    }\n    ;\n    get hasFocus() {\n        return this.element.hasFocus;\n    }\n    set hasFocus(value) {\n        this.element.hasFocus = value === '' ? true : value;\n    }\n    ;\n}\nCdsNavigationGroupDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsNavigationGroupDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdsNavigationGroupDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: CdsNavigationGroupDirective, selector: \"cds-navigation-group\", inputs: { cdsMotion: \"cdsMotion\", i18n: \"i18n\", expanded: \"expanded\", active: \"active\", hasFocus: \"hasFocus\" }, outputs: { cdsMotionChange: \"cdsMotionChange\", expandedChange: \"expandedChange\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsNavigationGroupDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'cds-navigation-group' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { cdsMotion: [{\n                type: Input\n            }], i18n: [{\n                type: Input\n            }], expanded: [{\n                type: Input\n            }], active: [{\n                type: Input\n            }], hasFocus: [{\n                type: Input\n            }], cdsMotionChange: [{\n                type: Output\n            }], expandedChange: [{\n                type: Output\n            }] } });\n\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsNavigationStartDirective {\n    constructor(elementRef) {\n        this.element = elementRef.nativeElement;\n    }\n    get i18n() {\n        return this.element.i18n;\n    }\n    set i18n(value) {\n        this.element.i18n = value;\n    }\n    ;\n    get expandedRoot() {\n        return this.element.expandedRoot;\n    }\n    set expandedRoot(value) {\n        this.element.expandedRoot = value === '' ? true : value;\n    }\n    ;\n    get hasFocus() {\n        return this.element.hasFocus;\n    }\n    set hasFocus(value) {\n        this.element.hasFocus = value;\n    }\n    ;\n    get isGroupStart() {\n        return this.element.isGroupStart;\n    }\n    set isGroupStart(value) {\n        this.element.isGroupStart = value === '' ? true : value;\n    }\n    ;\n    get navigationGroupId() {\n        return this.element.navigationGroupId;\n    }\n    set navigationGroupId(value) {\n        this.element.navigationGroupId = value;\n    }\n    ;\n    get itemText() {\n        return this.element.itemText;\n    }\n    set itemText(value) {\n        this.element.itemText = value;\n    }\n    ;\n}\nCdsNavigationStartDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsNavigationStartDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdsNavigationStartDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: CdsNavigationStartDirective, selector: \"cds-navigation-start\", inputs: { i18n: \"i18n\", expandedRoot: \"expandedRoot\", hasFocus: \"hasFocus\", isGroupStart: \"isGroupStart\", navigationGroupId: \"navigationGroupId\", itemText: \"itemText\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsNavigationStartDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'cds-navigation-start' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { i18n: [{\n                type: Input\n            }], expandedRoot: [{\n                type: Input\n            }], hasFocus: [{\n                type: Input\n            }], isGroupStart: [{\n                type: Input\n            }], navigationGroupId: [{\n                type: Input\n            }], itemText: [{\n                type: Input\n            }] } });\n\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsNavigationItemDirective {\n    constructor(elementRef) {\n        this.element = elementRef.nativeElement;\n    }\n    get i18n() {\n        return this.element.i18n;\n    }\n    set i18n(value) {\n        this.element.i18n = value;\n    }\n    ;\n    get active() {\n        return this.element.active;\n    }\n    set active(value) {\n        this.element.active = value === '' ? true : value;\n    }\n    ;\n    get disabled() {\n        return this.element.disabled;\n    }\n    set disabled(value) {\n        this.element.disabled = value === '' ? true : value;\n    }\n    ;\n    get expanded() {\n        return this.element.expanded;\n    }\n    set expanded(value) {\n        this.element.expanded = value === '' ? true : value;\n    }\n    ;\n    get groupItem() {\n        return this.element.groupItem;\n    }\n    set groupItem(value) {\n        this.element.groupItem = value === '' ? true : value;\n    }\n    ;\n    get hasFocus() {\n        return this.element.hasFocus;\n    }\n    set hasFocus(value) {\n        this.element.hasFocus = value;\n    }\n    ;\n    get focusElement() {\n        return this.element.focusElement;\n    }\n    set focusElement(value) {\n        this.element.focusElement = value;\n    }\n    ;\n    get itemText() {\n        return this.element.itemText;\n    }\n    set itemText(value) {\n        this.element.itemText = value;\n    }\n    ;\n}\nCdsNavigationItemDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsNavigationItemDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdsNavigationItemDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: CdsNavigationItemDirective, selector: \"cds-navigation-item\", inputs: { i18n: \"i18n\", active: \"active\", disabled: \"disabled\", expanded: \"expanded\", groupItem: \"groupItem\", hasFocus: \"hasFocus\", focusElement: \"focusElement\", itemText: \"itemText\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsNavigationItemDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'cds-navigation-item' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { i18n: [{\n                type: Input\n            }], active: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], expanded: [{\n                type: Input\n            }], groupItem: [{\n                type: Input\n            }], hasFocus: [{\n                type: Input\n            }], focusElement: [{\n                type: Input\n            }], itemText: [{\n                type: Input\n            }] } });\n\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsNavigationModule {\n}\nCdsNavigationModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsNavigationModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCdsNavigationModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsNavigationModule, declarations: [CdsNavigationDirective,\n        CdsNavigationGroupDirective,\n        CdsNavigationStartDirective,\n        CdsNavigationItemDirective], imports: [CommonModule], exports: [CdsNavigationDirective,\n        CdsNavigationGroupDirective,\n        CdsNavigationStartDirective,\n        CdsNavigationItemDirective] });\nCdsNavigationModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsNavigationModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsNavigationModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [\n                        CdsNavigationDirective,\n                        CdsNavigationGroupDirective,\n                        CdsNavigationStartDirective,\n                        CdsNavigationItemDirective,\n                    ],\n                    exports: [\n                        CdsNavigationDirective,\n                        CdsNavigationGroupDirective,\n                        CdsNavigationStartDirective,\n                        CdsNavigationItemDirective,\n                    ],\n                }]\n        }] });\n\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdsNavigationDirective, CdsNavigationGroupDirective, CdsNavigationItemDirective, CdsNavigationModule, CdsNavigationStartDirective };\n"]},"metadata":{},"sourceType":"module"}