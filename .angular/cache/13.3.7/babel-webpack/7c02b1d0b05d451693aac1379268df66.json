{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Directive, Input, EventEmitter, Output, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport '@cds/core/tree-view/register.js';\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nclass CdsTreeDirective {\n  constructor(elementRef) {\n    this.element = elementRef.nativeElement;\n  }\n\n  get multiSelect() {\n    return this.element.multiSelect;\n  }\n\n  set multiSelect(value) {\n    this.element.multiSelect = value === '' ? true : value;\n  }\n\n}\n\nCdsTreeDirective.ɵfac = function CdsTreeDirective_Factory(t) {\n  return new (t || CdsTreeDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nCdsTreeDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: CdsTreeDirective,\n  selectors: [[\"cds-tree\"]],\n  inputs: {\n    multiSelect: \"multiSelect\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdsTreeDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'cds-tree'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    multiSelect: [{\n      type: Input\n    }]\n  });\n})();\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nclass CdsTreeItemDirective {\n  constructor(elementRef) {\n    this.cdsMotionChange = new EventEmitter();\n    this.expandedChange = new EventEmitter();\n    this.selectedChange = new EventEmitter();\n    this.element = elementRef.nativeElement;\n  }\n\n  get i18n() {\n    return this.element.i18n;\n  }\n\n  set i18n(value) {\n    this.element.i18n = value;\n  }\n\n  get cdsMotion() {\n    return this.element.cdsMotion;\n  }\n\n  set cdsMotion(value) {\n    this.element.cdsMotion = value;\n  }\n\n  get multiSelect() {\n    return this.element.multiSelect;\n  }\n\n  set multiSelect(value) {\n    this.element.multiSelect = value === '' ? true : value;\n  }\n\n  get disabled() {\n    return this.element.disabled;\n  }\n\n  set disabled(value) {\n    this.element.disabled = value === '' ? true : value;\n  }\n\n  get expanded() {\n    return this.element.expanded;\n  }\n\n  set expanded(value) {\n    this.element.expanded = value === '' ? true : value;\n  }\n\n  get expandable() {\n    return this.element.expandable;\n  }\n\n  set expandable(value) {\n    this.element.expandable = value === '' ? true : value;\n  }\n\n  get indeterminate() {\n    return this.element.indeterminate;\n  }\n\n  set indeterminate(value) {\n    this.element.indeterminate = value === '' ? true : value;\n  }\n\n  get loading() {\n    return this.element.loading;\n  }\n\n  set loading(value) {\n    this.element.loading = value === '' ? true : value;\n  }\n\n  get selected() {\n    return this.element.selected;\n  }\n\n  set selected(value) {\n    this.element.selected = value === '' ? true : value;\n  }\n\n  get toggleExpanded() {\n    return this.element.toggleExpanded;\n  }\n\n  set toggleExpanded(value) {\n    this.element.toggleExpanded = value;\n  }\n\n  get toggleSelected() {\n    return this.element.toggleSelected;\n  }\n\n  set toggleSelected(value) {\n    this.element.toggleSelected = value;\n  }\n\n}\n\nCdsTreeItemDirective.ɵfac = function CdsTreeItemDirective_Factory(t) {\n  return new (t || CdsTreeItemDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nCdsTreeItemDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: CdsTreeItemDirective,\n  selectors: [[\"cds-tree-item\"]],\n  inputs: {\n    i18n: \"i18n\",\n    cdsMotion: \"cdsMotion\",\n    multiSelect: \"multiSelect\",\n    disabled: \"disabled\",\n    expanded: \"expanded\",\n    expandable: \"expandable\",\n    indeterminate: \"indeterminate\",\n    loading: \"loading\",\n    selected: \"selected\",\n    toggleExpanded: \"toggleExpanded\",\n    toggleSelected: \"toggleSelected\"\n  },\n  outputs: {\n    cdsMotionChange: \"cdsMotionChange\",\n    expandedChange: \"expandedChange\",\n    selectedChange: \"selectedChange\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdsTreeItemDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'cds-tree-item'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    i18n: [{\n      type: Input\n    }],\n    cdsMotion: [{\n      type: Input\n    }],\n    multiSelect: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    expanded: [{\n      type: Input\n    }],\n    expandable: [{\n      type: Input\n    }],\n    indeterminate: [{\n      type: Input\n    }],\n    loading: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    toggleExpanded: [{\n      type: Input\n    }],\n    toggleSelected: [{\n      type: Input\n    }],\n    cdsMotionChange: [{\n      type: Output\n    }],\n    expandedChange: [{\n      type: Output\n    }],\n    selectedChange: [{\n      type: Output\n    }]\n  });\n})();\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nclass CdsTreeViewModule {}\n\nCdsTreeViewModule.ɵfac = function CdsTreeViewModule_Factory(t) {\n  return new (t || CdsTreeViewModule)();\n};\n\nCdsTreeViewModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: CdsTreeViewModule\n});\nCdsTreeViewModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdsTreeViewModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [CdsTreeDirective, CdsTreeItemDirective],\n      exports: [CdsTreeDirective, CdsTreeItemDirective]\n    }]\n  }], null, null);\n})();\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CdsTreeDirective, CdsTreeItemDirective, CdsTreeViewModule };","map":{"version":3,"sources":["C:/Angular/toko/node_modules/@cds/angular/fesm2015/tree-view.mjs"],"names":["i0","Directive","Input","EventEmitter","Output","NgModule","CommonModule","CdsTreeDirective","constructor","elementRef","element","nativeElement","multiSelect","value","ɵfac","ElementRef","ɵdir","type","args","selector","CdsTreeItemDirective","cdsMotionChange","expandedChange","selectedChange","i18n","cdsMotion","disabled","expanded","expandable","indeterminate","loading","selected","toggleExpanded","toggleSelected","CdsTreeViewModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Directive, Input, EventEmitter, Output, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport '@cds/core/tree-view/register.js';\n\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsTreeDirective {\n    constructor(elementRef) {\n        this.element = elementRef.nativeElement;\n    }\n    get multiSelect() {\n        return this.element.multiSelect;\n    }\n    set multiSelect(value) {\n        this.element.multiSelect = value === '' ? true : value;\n    }\n    ;\n}\nCdsTreeDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsTreeDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdsTreeDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: CdsTreeDirective, selector: \"cds-tree\", inputs: { multiSelect: \"multiSelect\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsTreeDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'cds-tree' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { multiSelect: [{\n                type: Input\n            }] } });\n\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsTreeItemDirective {\n    constructor(elementRef) {\n        this.cdsMotionChange = new EventEmitter();\n        this.expandedChange = new EventEmitter();\n        this.selectedChange = new EventEmitter();\n        this.element = elementRef.nativeElement;\n    }\n    get i18n() {\n        return this.element.i18n;\n    }\n    set i18n(value) {\n        this.element.i18n = value;\n    }\n    ;\n    get cdsMotion() {\n        return this.element.cdsMotion;\n    }\n    set cdsMotion(value) {\n        this.element.cdsMotion = value;\n    }\n    ;\n    get multiSelect() {\n        return this.element.multiSelect;\n    }\n    set multiSelect(value) {\n        this.element.multiSelect = value === '' ? true : value;\n    }\n    ;\n    get disabled() {\n        return this.element.disabled;\n    }\n    set disabled(value) {\n        this.element.disabled = value === '' ? true : value;\n    }\n    ;\n    get expanded() {\n        return this.element.expanded;\n    }\n    set expanded(value) {\n        this.element.expanded = value === '' ? true : value;\n    }\n    ;\n    get expandable() {\n        return this.element.expandable;\n    }\n    set expandable(value) {\n        this.element.expandable = value === '' ? true : value;\n    }\n    ;\n    get indeterminate() {\n        return this.element.indeterminate;\n    }\n    set indeterminate(value) {\n        this.element.indeterminate = value === '' ? true : value;\n    }\n    ;\n    get loading() {\n        return this.element.loading;\n    }\n    set loading(value) {\n        this.element.loading = value === '' ? true : value;\n    }\n    ;\n    get selected() {\n        return this.element.selected;\n    }\n    set selected(value) {\n        this.element.selected = value === '' ? true : value;\n    }\n    ;\n    get toggleExpanded() {\n        return this.element.toggleExpanded;\n    }\n    set toggleExpanded(value) {\n        this.element.toggleExpanded = value;\n    }\n    ;\n    get toggleSelected() {\n        return this.element.toggleSelected;\n    }\n    set toggleSelected(value) {\n        this.element.toggleSelected = value;\n    }\n    ;\n}\nCdsTreeItemDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsTreeItemDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdsTreeItemDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: CdsTreeItemDirective, selector: \"cds-tree-item\", inputs: { i18n: \"i18n\", cdsMotion: \"cdsMotion\", multiSelect: \"multiSelect\", disabled: \"disabled\", expanded: \"expanded\", expandable: \"expandable\", indeterminate: \"indeterminate\", loading: \"loading\", selected: \"selected\", toggleExpanded: \"toggleExpanded\", toggleSelected: \"toggleSelected\" }, outputs: { cdsMotionChange: \"cdsMotionChange\", expandedChange: \"expandedChange\", selectedChange: \"selectedChange\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsTreeItemDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'cds-tree-item' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { i18n: [{\n                type: Input\n            }], cdsMotion: [{\n                type: Input\n            }], multiSelect: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], expanded: [{\n                type: Input\n            }], expandable: [{\n                type: Input\n            }], indeterminate: [{\n                type: Input\n            }], loading: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], toggleExpanded: [{\n                type: Input\n            }], toggleSelected: [{\n                type: Input\n            }], cdsMotionChange: [{\n                type: Output\n            }], expandedChange: [{\n                type: Output\n            }], selectedChange: [{\n                type: Output\n            }] } });\n\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsTreeViewModule {\n}\nCdsTreeViewModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsTreeViewModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCdsTreeViewModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsTreeViewModule, declarations: [CdsTreeDirective,\n        CdsTreeItemDirective], imports: [CommonModule], exports: [CdsTreeDirective,\n        CdsTreeItemDirective] });\nCdsTreeViewModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsTreeViewModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsTreeViewModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [\n                        CdsTreeDirective,\n                        CdsTreeItemDirective,\n                    ],\n                    exports: [\n                        CdsTreeDirective,\n                        CdsTreeItemDirective,\n                    ],\n                }]\n        }] });\n\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdsTreeDirective, CdsTreeItemDirective, CdsTreeViewModule };\n"]},"metadata":{},"sourceType":"module"}