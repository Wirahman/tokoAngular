{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Input, Output, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport '@cds/core/internal-components/overlay/register.js';\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nclass CdsInternalOverlayDirective {\n  constructor(elementRef) {\n    this.cdsMotionChange = new EventEmitter();\n    this.closeChange = new EventEmitter();\n    this.element = elementRef.nativeElement;\n  }\n\n  get cdsMotion() {\n    return this.element.cdsMotion;\n  }\n\n  set cdsMotion(value) {\n    this.element.cdsMotion = value;\n  }\n\n  get closable() {\n    return this.element.closable;\n  }\n\n  set closable(value) {\n    this.element.closable = value === '' ? true : value;\n  }\n\n  get hidden() {\n    return this.element.hidden;\n  }\n\n  set hidden(value) {\n    this.element.hidden = value === '' ? true : value;\n  }\n\n  get i18n() {\n    return this.element.i18n;\n  }\n\n  set i18n(value) {\n    this.element.i18n = value;\n  }\n\n  get closeOverlay() {\n    return this.element.closeOverlay;\n  }\n\n  set closeOverlay(value) {\n    this.element.closeOverlay = value;\n  }\n\n}\n\nCdsInternalOverlayDirective.ɵfac = function CdsInternalOverlayDirective_Factory(t) {\n  return new (t || CdsInternalOverlayDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nCdsInternalOverlayDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: CdsInternalOverlayDirective,\n  selectors: [[\"cds-internal-overlay\"]],\n  inputs: {\n    cdsMotion: \"cdsMotion\",\n    closable: \"closable\",\n    hidden: \"hidden\",\n    i18n: \"i18n\",\n    closeOverlay: \"closeOverlay\"\n  },\n  outputs: {\n    cdsMotionChange: \"cdsMotionChange\",\n    closeChange: \"closeChange\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdsInternalOverlayDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'cds-internal-overlay'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    cdsMotion: [{\n      type: Input\n    }],\n    closable: [{\n      type: Input\n    }],\n    hidden: [{\n      type: Input\n    }],\n    i18n: [{\n      type: Input\n    }],\n    closeOverlay: [{\n      type: Input\n    }],\n    cdsMotionChange: [{\n      type: Output\n    }],\n    closeChange: [{\n      type: Output\n    }]\n  });\n})();\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nclass CdsInternalComponentsOverlayModule {}\n\nCdsInternalComponentsOverlayModule.ɵfac = function CdsInternalComponentsOverlayModule_Factory(t) {\n  return new (t || CdsInternalComponentsOverlayModule)();\n};\n\nCdsInternalComponentsOverlayModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: CdsInternalComponentsOverlayModule\n});\nCdsInternalComponentsOverlayModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdsInternalComponentsOverlayModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [CdsInternalOverlayDirective],\n      exports: [CdsInternalOverlayDirective]\n    }]\n  }], null, null);\n})();\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CdsInternalComponentsOverlayModule, CdsInternalOverlayDirective };","map":{"version":3,"sources":["C:/Angular/toko/node_modules/@cds/angular/fesm2015/internal-components-overlay.mjs"],"names":["i0","EventEmitter","Directive","Input","Output","NgModule","CommonModule","CdsInternalOverlayDirective","constructor","elementRef","cdsMotionChange","closeChange","element","nativeElement","cdsMotion","value","closable","hidden","i18n","closeOverlay","ɵfac","ElementRef","ɵdir","type","args","selector","CdsInternalComponentsOverlayModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Input, Output, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport '@cds/core/internal-components/overlay/register.js';\n\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsInternalOverlayDirective {\n    constructor(elementRef) {\n        this.cdsMotionChange = new EventEmitter();\n        this.closeChange = new EventEmitter();\n        this.element = elementRef.nativeElement;\n    }\n    get cdsMotion() {\n        return this.element.cdsMotion;\n    }\n    set cdsMotion(value) {\n        this.element.cdsMotion = value;\n    }\n    ;\n    get closable() {\n        return this.element.closable;\n    }\n    set closable(value) {\n        this.element.closable = value === '' ? true : value;\n    }\n    ;\n    get hidden() {\n        return this.element.hidden;\n    }\n    set hidden(value) {\n        this.element.hidden = value === '' ? true : value;\n    }\n    ;\n    get i18n() {\n        return this.element.i18n;\n    }\n    set i18n(value) {\n        this.element.i18n = value;\n    }\n    ;\n    get closeOverlay() {\n        return this.element.closeOverlay;\n    }\n    set closeOverlay(value) {\n        this.element.closeOverlay = value;\n    }\n    ;\n}\nCdsInternalOverlayDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsInternalOverlayDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdsInternalOverlayDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: CdsInternalOverlayDirective, selector: \"cds-internal-overlay\", inputs: { cdsMotion: \"cdsMotion\", closable: \"closable\", hidden: \"hidden\", i18n: \"i18n\", closeOverlay: \"closeOverlay\" }, outputs: { cdsMotionChange: \"cdsMotionChange\", closeChange: \"closeChange\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsInternalOverlayDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'cds-internal-overlay' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { cdsMotion: [{\n                type: Input\n            }], closable: [{\n                type: Input\n            }], hidden: [{\n                type: Input\n            }], i18n: [{\n                type: Input\n            }], closeOverlay: [{\n                type: Input\n            }], cdsMotionChange: [{\n                type: Output\n            }], closeChange: [{\n                type: Output\n            }] } });\n\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsInternalComponentsOverlayModule {\n}\nCdsInternalComponentsOverlayModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsInternalComponentsOverlayModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCdsInternalComponentsOverlayModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsInternalComponentsOverlayModule, declarations: [CdsInternalOverlayDirective], imports: [CommonModule], exports: [CdsInternalOverlayDirective] });\nCdsInternalComponentsOverlayModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsInternalComponentsOverlayModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsInternalComponentsOverlayModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [\n                        CdsInternalOverlayDirective,\n                    ],\n                    exports: [\n                        CdsInternalOverlayDirective,\n                    ],\n                }]\n        }] });\n\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdsInternalComponentsOverlayModule, CdsInternalOverlayDirective };\n"]},"metadata":{},"sourceType":"module"}