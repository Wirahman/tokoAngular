{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Input, Output, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport '@cds/core/checkbox/register.js';\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nclass CdsCheckboxDirective {\n  constructor(elementRef) {\n    this.layoutChange = new EventEmitter();\n    this.element = elementRef.nativeElement;\n  }\n\n  get controlAlign() {\n    return this.element.controlAlign;\n  }\n\n  set controlAlign(value) {\n    this.element.controlAlign = value;\n  }\n\n  get status() {\n    return this.element.status;\n  }\n\n  set status(value) {\n    this.element.status = value;\n  }\n\n  get controlWidth() {\n    return this.element.controlWidth;\n  }\n\n  set controlWidth(value) {\n    this.element.controlWidth = value;\n  }\n\n  get validate() {\n    return this.element.validate;\n  }\n\n  set validate(value) {\n    this.element.validate = value === '' ? true : value;\n  }\n\n  get responsive() {\n    return this.element.responsive;\n  }\n\n  set responsive(value) {\n    this.element.responsive = value === '' ? true : value;\n  }\n\n  get layout() {\n    return this.element.layout;\n  }\n\n  set layout(value) {\n    this.element.layout = value;\n  }\n\n}\n\nCdsCheckboxDirective.ɵfac = function CdsCheckboxDirective_Factory(t) {\n  return new (t || CdsCheckboxDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nCdsCheckboxDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: CdsCheckboxDirective,\n  selectors: [[\"cds-checkbox\"]],\n  inputs: {\n    controlAlign: \"controlAlign\",\n    status: \"status\",\n    controlWidth: \"controlWidth\",\n    validate: \"validate\",\n    responsive: \"responsive\",\n    layout: \"layout\"\n  },\n  outputs: {\n    layoutChange: \"layoutChange\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdsCheckboxDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'cds-checkbox'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    controlAlign: [{\n      type: Input\n    }],\n    status: [{\n      type: Input\n    }],\n    controlWidth: [{\n      type: Input\n    }],\n    validate: [{\n      type: Input\n    }],\n    responsive: [{\n      type: Input\n    }],\n    layout: [{\n      type: Input\n    }],\n    layoutChange: [{\n      type: Output\n    }]\n  });\n})();\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nclass CdsCheckboxGroupDirective {\n  constructor(elementRef) {\n    this.element = elementRef.nativeElement;\n  }\n\n  get status() {\n    return this.element.status;\n  }\n\n  set status(value) {\n    this.element.status = value;\n  }\n\n  get layout() {\n    return this.element.layout;\n  }\n\n  set layout(value) {\n    this.element.layout = value;\n  }\n\n  get controlAlign() {\n    return this.element.controlAlign;\n  }\n\n  set controlAlign(value) {\n    this.element.controlAlign = value;\n  }\n\n  get disabled() {\n    return this.element.disabled;\n  }\n\n  set disabled(value) {\n    this.element.disabled = value === '' ? true : value;\n  }\n\n  get controlWidth() {\n    return this.element.controlWidth;\n  }\n\n  set controlWidth(value) {\n    this.element.controlWidth = value;\n  }\n\n  get responsive() {\n    return this.element.responsive;\n  }\n\n  set responsive(value) {\n    this.element.responsive = value === '' ? true : value;\n  }\n\n}\n\nCdsCheckboxGroupDirective.ɵfac = function CdsCheckboxGroupDirective_Factory(t) {\n  return new (t || CdsCheckboxGroupDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nCdsCheckboxGroupDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: CdsCheckboxGroupDirective,\n  selectors: [[\"cds-checkbox-group\"]],\n  inputs: {\n    status: \"status\",\n    layout: \"layout\",\n    controlAlign: \"controlAlign\",\n    disabled: \"disabled\",\n    controlWidth: \"controlWidth\",\n    responsive: \"responsive\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdsCheckboxGroupDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'cds-checkbox-group'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    status: [{\n      type: Input\n    }],\n    layout: [{\n      type: Input\n    }],\n    controlAlign: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    controlWidth: [{\n      type: Input\n    }],\n    responsive: [{\n      type: Input\n    }]\n  });\n})();\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nclass CdsCheckboxModule {}\n\nCdsCheckboxModule.ɵfac = function CdsCheckboxModule_Factory(t) {\n  return new (t || CdsCheckboxModule)();\n};\n\nCdsCheckboxModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: CdsCheckboxModule\n});\nCdsCheckboxModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdsCheckboxModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [CdsCheckboxDirective, CdsCheckboxGroupDirective],\n      exports: [CdsCheckboxDirective, CdsCheckboxGroupDirective]\n    }]\n  }], null, null);\n})();\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CdsCheckboxDirective, CdsCheckboxGroupDirective, CdsCheckboxModule };","map":{"version":3,"sources":["C:/Angular/toko/node_modules/@cds/angular/fesm2015/checkbox.mjs"],"names":["i0","EventEmitter","Directive","Input","Output","NgModule","CommonModule","CdsCheckboxDirective","constructor","elementRef","layoutChange","element","nativeElement","controlAlign","value","status","controlWidth","validate","responsive","layout","ɵfac","ElementRef","ɵdir","type","args","selector","CdsCheckboxGroupDirective","disabled","CdsCheckboxModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Input, Output, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport '@cds/core/checkbox/register.js';\n\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsCheckboxDirective {\n    constructor(elementRef) {\n        this.layoutChange = new EventEmitter();\n        this.element = elementRef.nativeElement;\n    }\n    get controlAlign() {\n        return this.element.controlAlign;\n    }\n    set controlAlign(value) {\n        this.element.controlAlign = value;\n    }\n    ;\n    get status() {\n        return this.element.status;\n    }\n    set status(value) {\n        this.element.status = value;\n    }\n    ;\n    get controlWidth() {\n        return this.element.controlWidth;\n    }\n    set controlWidth(value) {\n        this.element.controlWidth = value;\n    }\n    ;\n    get validate() {\n        return this.element.validate;\n    }\n    set validate(value) {\n        this.element.validate = value === '' ? true : value;\n    }\n    ;\n    get responsive() {\n        return this.element.responsive;\n    }\n    set responsive(value) {\n        this.element.responsive = value === '' ? true : value;\n    }\n    ;\n    get layout() {\n        return this.element.layout;\n    }\n    set layout(value) {\n        this.element.layout = value;\n    }\n    ;\n}\nCdsCheckboxDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsCheckboxDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdsCheckboxDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: CdsCheckboxDirective, selector: \"cds-checkbox\", inputs: { controlAlign: \"controlAlign\", status: \"status\", controlWidth: \"controlWidth\", validate: \"validate\", responsive: \"responsive\", layout: \"layout\" }, outputs: { layoutChange: \"layoutChange\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsCheckboxDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'cds-checkbox' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { controlAlign: [{\n                type: Input\n            }], status: [{\n                type: Input\n            }], controlWidth: [{\n                type: Input\n            }], validate: [{\n                type: Input\n            }], responsive: [{\n                type: Input\n            }], layout: [{\n                type: Input\n            }], layoutChange: [{\n                type: Output\n            }] } });\n\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsCheckboxGroupDirective {\n    constructor(elementRef) {\n        this.element = elementRef.nativeElement;\n    }\n    get status() {\n        return this.element.status;\n    }\n    set status(value) {\n        this.element.status = value;\n    }\n    ;\n    get layout() {\n        return this.element.layout;\n    }\n    set layout(value) {\n        this.element.layout = value;\n    }\n    ;\n    get controlAlign() {\n        return this.element.controlAlign;\n    }\n    set controlAlign(value) {\n        this.element.controlAlign = value;\n    }\n    ;\n    get disabled() {\n        return this.element.disabled;\n    }\n    set disabled(value) {\n        this.element.disabled = value === '' ? true : value;\n    }\n    ;\n    get controlWidth() {\n        return this.element.controlWidth;\n    }\n    set controlWidth(value) {\n        this.element.controlWidth = value;\n    }\n    ;\n    get responsive() {\n        return this.element.responsive;\n    }\n    set responsive(value) {\n        this.element.responsive = value === '' ? true : value;\n    }\n    ;\n}\nCdsCheckboxGroupDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsCheckboxGroupDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdsCheckboxGroupDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: CdsCheckboxGroupDirective, selector: \"cds-checkbox-group\", inputs: { status: \"status\", layout: \"layout\", controlAlign: \"controlAlign\", disabled: \"disabled\", controlWidth: \"controlWidth\", responsive: \"responsive\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsCheckboxGroupDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'cds-checkbox-group' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { status: [{\n                type: Input\n            }], layout: [{\n                type: Input\n            }], controlAlign: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], controlWidth: [{\n                type: Input\n            }], responsive: [{\n                type: Input\n            }] } });\n\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsCheckboxModule {\n}\nCdsCheckboxModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsCheckboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCdsCheckboxModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsCheckboxModule, declarations: [CdsCheckboxDirective,\n        CdsCheckboxGroupDirective], imports: [CommonModule], exports: [CdsCheckboxDirective,\n        CdsCheckboxGroupDirective] });\nCdsCheckboxModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsCheckboxModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsCheckboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [\n                        CdsCheckboxDirective,\n                        CdsCheckboxGroupDirective,\n                    ],\n                    exports: [\n                        CdsCheckboxDirective,\n                        CdsCheckboxGroupDirective,\n                    ],\n                }]\n        }] });\n\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdsCheckboxDirective, CdsCheckboxGroupDirective, CdsCheckboxModule };\n"]},"metadata":{},"sourceType":"module"}