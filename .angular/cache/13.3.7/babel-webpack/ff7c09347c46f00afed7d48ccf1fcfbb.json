{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Input, Output, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport '@cds/core/signpost/register.js';\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nclass CdsSignpostDirective {\n  constructor(elementRef) {\n    this.cdsMotionChange = new EventEmitter();\n    this.closeChange = new EventEmitter();\n    this.element = elementRef.nativeElement;\n  }\n\n  get closable() {\n    return this.element.closable;\n  }\n\n  set closable(value) {\n    this.element.closable = value === '' ? true : value;\n  }\n\n  get defaultPointerType() {\n    return this.element.defaultPointerType;\n  }\n\n  set defaultPointerType(value) {\n    this.element.defaultPointerType = value;\n  }\n\n  get trigger() {\n    return this.element.trigger;\n  }\n\n  set trigger(value) {\n    this.element.trigger = value;\n  }\n\n  get i18n() {\n    return this.element.i18n;\n  }\n\n  set i18n(value) {\n    this.element.i18n = value;\n  }\n\n  get cdsMotion() {\n    return this.element.cdsMotion;\n  }\n\n  set cdsMotion(value) {\n    this.element.cdsMotion = value;\n  }\n\n  get anchor() {\n    return this.element.anchor;\n  }\n\n  set anchor(value) {\n    this.element.anchor = value;\n  }\n\n  get anchorAlign() {\n    return this.element.anchorAlign;\n  }\n\n  set anchorAlign(value) {\n    this.element.anchorAlign = value;\n  }\n\n  get mainAxisOffset() {\n    return this.element.mainAxisOffset;\n  }\n\n  set mainAxisOffset(value) {\n    this.element.mainAxisOffset = value;\n  }\n\n  get crossAxisOffset() {\n    return this.element.crossAxisOffset;\n  }\n\n  set crossAxisOffset(value) {\n    this.element.crossAxisOffset = value;\n  }\n\n  get orientation() {\n    return this.element.orientation;\n  }\n\n  set orientation(value) {\n    this.element.orientation = value;\n  }\n\n  get pointerAlign() {\n    return this.element.pointerAlign;\n  }\n\n  set pointerAlign(value) {\n    this.element.pointerAlign = value;\n  }\n\n  get pointer() {\n    return this.element.pointer;\n  }\n\n  set pointer(value) {\n    this.element.pointer = value;\n  }\n\n  get hidden() {\n    return this.element.hidden;\n  }\n\n  set hidden(value) {\n    this.element.hidden = value === '' ? true : value;\n  }\n\n  get closeOverlay() {\n    return this.element.closeOverlay;\n  }\n\n  set closeOverlay(value) {\n    this.element.closeOverlay = value;\n  }\n\n}\n\nCdsSignpostDirective.ɵfac = function CdsSignpostDirective_Factory(t) {\n  return new (t || CdsSignpostDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nCdsSignpostDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: CdsSignpostDirective,\n  selectors: [[\"cds-signpost\"]],\n  inputs: {\n    closable: \"closable\",\n    defaultPointerType: \"defaultPointerType\",\n    trigger: \"trigger\",\n    i18n: \"i18n\",\n    cdsMotion: \"cdsMotion\",\n    anchor: \"anchor\",\n    anchorAlign: \"anchorAlign\",\n    mainAxisOffset: \"mainAxisOffset\",\n    crossAxisOffset: \"crossAxisOffset\",\n    orientation: \"orientation\",\n    pointerAlign: \"pointerAlign\",\n    pointer: \"pointer\",\n    hidden: \"hidden\",\n    closeOverlay: \"closeOverlay\"\n  },\n  outputs: {\n    cdsMotionChange: \"cdsMotionChange\",\n    closeChange: \"closeChange\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdsSignpostDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'cds-signpost'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    closable: [{\n      type: Input\n    }],\n    defaultPointerType: [{\n      type: Input\n    }],\n    trigger: [{\n      type: Input\n    }],\n    i18n: [{\n      type: Input\n    }],\n    cdsMotion: [{\n      type: Input\n    }],\n    anchor: [{\n      type: Input\n    }],\n    anchorAlign: [{\n      type: Input\n    }],\n    mainAxisOffset: [{\n      type: Input\n    }],\n    crossAxisOffset: [{\n      type: Input\n    }],\n    orientation: [{\n      type: Input\n    }],\n    pointerAlign: [{\n      type: Input\n    }],\n    pointer: [{\n      type: Input\n    }],\n    hidden: [{\n      type: Input\n    }],\n    closeOverlay: [{\n      type: Input\n    }],\n    cdsMotionChange: [{\n      type: Output\n    }],\n    closeChange: [{\n      type: Output\n    }]\n  });\n})();\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nclass CdsSignpostModule {}\n\nCdsSignpostModule.ɵfac = function CdsSignpostModule_Factory(t) {\n  return new (t || CdsSignpostModule)();\n};\n\nCdsSignpostModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: CdsSignpostModule\n});\nCdsSignpostModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdsSignpostModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [CdsSignpostDirective],\n      exports: [CdsSignpostDirective]\n    }]\n  }], null, null);\n})();\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CdsSignpostDirective, CdsSignpostModule };","map":{"version":3,"sources":["C:/Angular/toko/node_modules/@cds/angular/fesm2015/signpost.mjs"],"names":["i0","EventEmitter","Directive","Input","Output","NgModule","CommonModule","CdsSignpostDirective","constructor","elementRef","cdsMotionChange","closeChange","element","nativeElement","closable","value","defaultPointerType","trigger","i18n","cdsMotion","anchor","anchorAlign","mainAxisOffset","crossAxisOffset","orientation","pointerAlign","pointer","hidden","closeOverlay","ɵfac","ElementRef","ɵdir","type","args","selector","CdsSignpostModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,KAAlC,EAAyCC,MAAzC,EAAiDC,QAAjD,QAAiE,eAAjE;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAO,gCAAP;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMC,oBAAN,CAA2B;AACvBC,EAAAA,WAAW,CAACC,UAAD,EAAa;AACpB,SAAKC,eAAL,GAAuB,IAAIT,YAAJ,EAAvB;AACA,SAAKU,WAAL,GAAmB,IAAIV,YAAJ,EAAnB;AACA,SAAKW,OAAL,GAAeH,UAAU,CAACI,aAA1B;AACH;;AACW,MAARC,QAAQ,GAAG;AACX,WAAO,KAAKF,OAAL,CAAaE,QAApB;AACH;;AACW,MAARA,QAAQ,CAACC,KAAD,EAAQ;AAChB,SAAKH,OAAL,CAAaE,QAAb,GAAwBC,KAAK,KAAK,EAAV,GAAe,IAAf,GAAsBA,KAA9C;AACH;;AAEqB,MAAlBC,kBAAkB,GAAG;AACrB,WAAO,KAAKJ,OAAL,CAAaI,kBAApB;AACH;;AACqB,MAAlBA,kBAAkB,CAACD,KAAD,EAAQ;AAC1B,SAAKH,OAAL,CAAaI,kBAAb,GAAkCD,KAAlC;AACH;;AAEU,MAAPE,OAAO,GAAG;AACV,WAAO,KAAKL,OAAL,CAAaK,OAApB;AACH;;AACU,MAAPA,OAAO,CAACF,KAAD,EAAQ;AACf,SAAKH,OAAL,CAAaK,OAAb,GAAuBF,KAAvB;AACH;;AAEO,MAAJG,IAAI,GAAG;AACP,WAAO,KAAKN,OAAL,CAAaM,IAApB;AACH;;AACO,MAAJA,IAAI,CAACH,KAAD,EAAQ;AACZ,SAAKH,OAAL,CAAaM,IAAb,GAAoBH,KAApB;AACH;;AAEY,MAATI,SAAS,GAAG;AACZ,WAAO,KAAKP,OAAL,CAAaO,SAApB;AACH;;AACY,MAATA,SAAS,CAACJ,KAAD,EAAQ;AACjB,SAAKH,OAAL,CAAaO,SAAb,GAAyBJ,KAAzB;AACH;;AAES,MAANK,MAAM,GAAG;AACT,WAAO,KAAKR,OAAL,CAAaQ,MAApB;AACH;;AACS,MAANA,MAAM,CAACL,KAAD,EAAQ;AACd,SAAKH,OAAL,CAAaQ,MAAb,GAAsBL,KAAtB;AACH;;AAEc,MAAXM,WAAW,GAAG;AACd,WAAO,KAAKT,OAAL,CAAaS,WAApB;AACH;;AACc,MAAXA,WAAW,CAACN,KAAD,EAAQ;AACnB,SAAKH,OAAL,CAAaS,WAAb,GAA2BN,KAA3B;AACH;;AAEiB,MAAdO,cAAc,GAAG;AACjB,WAAO,KAAKV,OAAL,CAAaU,cAApB;AACH;;AACiB,MAAdA,cAAc,CAACP,KAAD,EAAQ;AACtB,SAAKH,OAAL,CAAaU,cAAb,GAA8BP,KAA9B;AACH;;AAEkB,MAAfQ,eAAe,GAAG;AAClB,WAAO,KAAKX,OAAL,CAAaW,eAApB;AACH;;AACkB,MAAfA,eAAe,CAACR,KAAD,EAAQ;AACvB,SAAKH,OAAL,CAAaW,eAAb,GAA+BR,KAA/B;AACH;;AAEc,MAAXS,WAAW,GAAG;AACd,WAAO,KAAKZ,OAAL,CAAaY,WAApB;AACH;;AACc,MAAXA,WAAW,CAACT,KAAD,EAAQ;AACnB,SAAKH,OAAL,CAAaY,WAAb,GAA2BT,KAA3B;AACH;;AAEe,MAAZU,YAAY,GAAG;AACf,WAAO,KAAKb,OAAL,CAAaa,YAApB;AACH;;AACe,MAAZA,YAAY,CAACV,KAAD,EAAQ;AACpB,SAAKH,OAAL,CAAaa,YAAb,GAA4BV,KAA5B;AACH;;AAEU,MAAPW,OAAO,GAAG;AACV,WAAO,KAAKd,OAAL,CAAac,OAApB;AACH;;AACU,MAAPA,OAAO,CAACX,KAAD,EAAQ;AACf,SAAKH,OAAL,CAAac,OAAb,GAAuBX,KAAvB;AACH;;AAES,MAANY,MAAM,GAAG;AACT,WAAO,KAAKf,OAAL,CAAae,MAApB;AACH;;AACS,MAANA,MAAM,CAACZ,KAAD,EAAQ;AACd,SAAKH,OAAL,CAAae,MAAb,GAAsBZ,KAAK,KAAK,EAAV,GAAe,IAAf,GAAsBA,KAA5C;AACH;;AAEe,MAAZa,YAAY,GAAG;AACf,WAAO,KAAKhB,OAAL,CAAagB,YAApB;AACH;;AACe,MAAZA,YAAY,CAACb,KAAD,EAAQ;AACpB,SAAKH,OAAL,CAAagB,YAAb,GAA4Bb,KAA5B;AACH;;AAtGsB;;AAyG3BR,oBAAoB,CAACsB,IAArB;AAAA,mBAAiHtB,oBAAjH,EAAuGP,EAAvG,mBAAuJA,EAAE,CAAC8B,UAA1J;AAAA;;AACAvB,oBAAoB,CAACwB,IAArB,kBADuG/B,EACvG;AAAA,QAAqGO,oBAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA,qDAFuGP,EAEvG,mBAA2FO,oBAA3F,EAA6H,CAAC;AAClHyB,IAAAA,IAAI,EAAE9B,SAD4G;AAElH+B,IAAAA,IAAI,EAAE,CAAC;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAD;AAF4G,GAAD,CAA7H,EAG4B,YAAY;AAAE,WAAO,CAAC;AAAEF,MAAAA,IAAI,EAAEhC,EAAE,CAAC8B;AAAX,KAAD,CAAP;AAAmC,GAH7E,EAG+F;AAAEhB,IAAAA,QAAQ,EAAE,CAAC;AAC5FkB,MAAAA,IAAI,EAAE7B;AADsF,KAAD,CAAZ;AAE/Ea,IAAAA,kBAAkB,EAAE,CAAC;AACrBgB,MAAAA,IAAI,EAAE7B;AADe,KAAD,CAF2D;AAI/Ec,IAAAA,OAAO,EAAE,CAAC;AACVe,MAAAA,IAAI,EAAE7B;AADI,KAAD,CAJsE;AAM/Ee,IAAAA,IAAI,EAAE,CAAC;AACPc,MAAAA,IAAI,EAAE7B;AADC,KAAD,CANyE;AAQ/EgB,IAAAA,SAAS,EAAE,CAAC;AACZa,MAAAA,IAAI,EAAE7B;AADM,KAAD,CARoE;AAU/EiB,IAAAA,MAAM,EAAE,CAAC;AACTY,MAAAA,IAAI,EAAE7B;AADG,KAAD,CAVuE;AAY/EkB,IAAAA,WAAW,EAAE,CAAC;AACdW,MAAAA,IAAI,EAAE7B;AADQ,KAAD,CAZkE;AAc/EmB,IAAAA,cAAc,EAAE,CAAC;AACjBU,MAAAA,IAAI,EAAE7B;AADW,KAAD,CAd+D;AAgB/EoB,IAAAA,eAAe,EAAE,CAAC;AAClBS,MAAAA,IAAI,EAAE7B;AADY,KAAD,CAhB8D;AAkB/EqB,IAAAA,WAAW,EAAE,CAAC;AACdQ,MAAAA,IAAI,EAAE7B;AADQ,KAAD,CAlBkE;AAoB/EsB,IAAAA,YAAY,EAAE,CAAC;AACfO,MAAAA,IAAI,EAAE7B;AADS,KAAD,CApBiE;AAsB/EuB,IAAAA,OAAO,EAAE,CAAC;AACVM,MAAAA,IAAI,EAAE7B;AADI,KAAD,CAtBsE;AAwB/EwB,IAAAA,MAAM,EAAE,CAAC;AACTK,MAAAA,IAAI,EAAE7B;AADG,KAAD,CAxBuE;AA0B/EyB,IAAAA,YAAY,EAAE,CAAC;AACfI,MAAAA,IAAI,EAAE7B;AADS,KAAD,CA1BiE;AA4B/EO,IAAAA,eAAe,EAAE,CAAC;AAClBsB,MAAAA,IAAI,EAAE5B;AADY,KAAD,CA5B8D;AA8B/EO,IAAAA,WAAW,EAAE,CAAC;AACdqB,MAAAA,IAAI,EAAE5B;AADQ,KAAD;AA9BkE,GAH/F;AAAA;AAqCA;AACA;AACA;AACA;AACA;;;AACA,MAAM+B,iBAAN,CAAwB;;AAExBA,iBAAiB,CAACN,IAAlB;AAAA,mBAA8GM,iBAA9G;AAAA;;AACAA,iBAAiB,CAACC,IAAlB,kBA/CuGpC,EA+CvG;AAAA,QAA+GmC;AAA/G;AACAA,iBAAiB,CAACE,IAAlB,kBAhDuGrC,EAgDvG;AAAA,YAA4I,CAACM,YAAD,CAA5I;AAAA;;AACA;AAAA,qDAjDuGN,EAiDvG,mBAA2FmC,iBAA3F,EAA0H,CAAC;AAC/GH,IAAAA,IAAI,EAAE3B,QADyG;AAE/G4B,IAAAA,IAAI,EAAE,CAAC;AACCK,MAAAA,OAAO,EAAE,CAAChC,YAAD,CADV;AAECiC,MAAAA,YAAY,EAAE,CACVhC,oBADU,CAFf;AAKCiC,MAAAA,OAAO,EAAE,CACLjC,oBADK;AALV,KAAD;AAFyG,GAAD,CAA1H;AAAA;AAaA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAEA,SAASA,oBAAT,EAA+B4B,iBAA/B","sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Input, Output, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport '@cds/core/signpost/register.js';\n\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsSignpostDirective {\n    constructor(elementRef) {\n        this.cdsMotionChange = new EventEmitter();\n        this.closeChange = new EventEmitter();\n        this.element = elementRef.nativeElement;\n    }\n    get closable() {\n        return this.element.closable;\n    }\n    set closable(value) {\n        this.element.closable = value === '' ? true : value;\n    }\n    ;\n    get defaultPointerType() {\n        return this.element.defaultPointerType;\n    }\n    set defaultPointerType(value) {\n        this.element.defaultPointerType = value;\n    }\n    ;\n    get trigger() {\n        return this.element.trigger;\n    }\n    set trigger(value) {\n        this.element.trigger = value;\n    }\n    ;\n    get i18n() {\n        return this.element.i18n;\n    }\n    set i18n(value) {\n        this.element.i18n = value;\n    }\n    ;\n    get cdsMotion() {\n        return this.element.cdsMotion;\n    }\n    set cdsMotion(value) {\n        this.element.cdsMotion = value;\n    }\n    ;\n    get anchor() {\n        return this.element.anchor;\n    }\n    set anchor(value) {\n        this.element.anchor = value;\n    }\n    ;\n    get anchorAlign() {\n        return this.element.anchorAlign;\n    }\n    set anchorAlign(value) {\n        this.element.anchorAlign = value;\n    }\n    ;\n    get mainAxisOffset() {\n        return this.element.mainAxisOffset;\n    }\n    set mainAxisOffset(value) {\n        this.element.mainAxisOffset = value;\n    }\n    ;\n    get crossAxisOffset() {\n        return this.element.crossAxisOffset;\n    }\n    set crossAxisOffset(value) {\n        this.element.crossAxisOffset = value;\n    }\n    ;\n    get orientation() {\n        return this.element.orientation;\n    }\n    set orientation(value) {\n        this.element.orientation = value;\n    }\n    ;\n    get pointerAlign() {\n        return this.element.pointerAlign;\n    }\n    set pointerAlign(value) {\n        this.element.pointerAlign = value;\n    }\n    ;\n    get pointer() {\n        return this.element.pointer;\n    }\n    set pointer(value) {\n        this.element.pointer = value;\n    }\n    ;\n    get hidden() {\n        return this.element.hidden;\n    }\n    set hidden(value) {\n        this.element.hidden = value === '' ? true : value;\n    }\n    ;\n    get closeOverlay() {\n        return this.element.closeOverlay;\n    }\n    set closeOverlay(value) {\n        this.element.closeOverlay = value;\n    }\n    ;\n}\nCdsSignpostDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsSignpostDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdsSignpostDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: CdsSignpostDirective, selector: \"cds-signpost\", inputs: { closable: \"closable\", defaultPointerType: \"defaultPointerType\", trigger: \"trigger\", i18n: \"i18n\", cdsMotion: \"cdsMotion\", anchor: \"anchor\", anchorAlign: \"anchorAlign\", mainAxisOffset: \"mainAxisOffset\", crossAxisOffset: \"crossAxisOffset\", orientation: \"orientation\", pointerAlign: \"pointerAlign\", pointer: \"pointer\", hidden: \"hidden\", closeOverlay: \"closeOverlay\" }, outputs: { cdsMotionChange: \"cdsMotionChange\", closeChange: \"closeChange\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsSignpostDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'cds-signpost' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { closable: [{\n                type: Input\n            }], defaultPointerType: [{\n                type: Input\n            }], trigger: [{\n                type: Input\n            }], i18n: [{\n                type: Input\n            }], cdsMotion: [{\n                type: Input\n            }], anchor: [{\n                type: Input\n            }], anchorAlign: [{\n                type: Input\n            }], mainAxisOffset: [{\n                type: Input\n            }], crossAxisOffset: [{\n                type: Input\n            }], orientation: [{\n                type: Input\n            }], pointerAlign: [{\n                type: Input\n            }], pointer: [{\n                type: Input\n            }], hidden: [{\n                type: Input\n            }], closeOverlay: [{\n                type: Input\n            }], cdsMotionChange: [{\n                type: Output\n            }], closeChange: [{\n                type: Output\n            }] } });\n\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsSignpostModule {\n}\nCdsSignpostModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsSignpostModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCdsSignpostModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsSignpostModule, declarations: [CdsSignpostDirective], imports: [CommonModule], exports: [CdsSignpostDirective] });\nCdsSignpostModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsSignpostModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CdsSignpostModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [\n                        CdsSignpostDirective,\n                    ],\n                    exports: [\n                        CdsSignpostDirective,\n                    ],\n                }]\n        }] });\n\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdsSignpostDirective, CdsSignpostModule };\n"]},"metadata":{},"sourceType":"module"}